# effective_dart version 1.3.0
linter:
  rules:
    # STYLE
    - camel_case_types # do
    - camel_case_extensions # do
    - library_names # do
    - file_names # do
    - library_prefixes # do
    - non_constant_identifier_names # do
    - constant_identifier_names # prefer
    - directives_ordering # do
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures # do

    # DOCUMENTATION
    - slash_for_doc_comments # do
    - package_api_docs # prefer
    - public_member_api_docs # prefer
    #- comment_references # do # Unused because https://github.com/dart-lang/sdk/issues/36974

    # USAGE
    - unnecessary_brace_in_string_interps # avoid
    #- prefer_expression_function_bodies # consider
    - prefer_relative_imports # prefer
    - prefer_adjacent_string_concatenation # do
    - prefer_interpolation_to_compose_strings # prefer
    - implementation_imports # don't
    - prefer_collection_literals # do
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType # do
    - prefer_function_declarations_over_variables # do
    - unnecessary_lambdas # don't
    - prefer_equal_for_default_values # do
    - avoid_init_to_null # don't
    - unnecessary_getters_setters # don't
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    - avoid_relative_lib_imports # prefer
    - unnecessary_this # don't
    - prefer_initializing_formals # do
    - type_init_formals # don't
    - empty_constructor_bodies # do
    - unnecessary_new # don't
    - unnecessary_const # don't
    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors # don't
    - use_rethrow_when_possible # do

    # DESIGN
    - avoid_null_checks_in_equality_operators # don't
    - one_member_abstracts # avoid
    - avoid_classes_with_only_static_members # avoid
    - prefer_mixin # do
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - use_setters_to_change_properties # do
    - avoid_setters_without_getters # don't
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    #- prefer_typing_uninitialized_variables # consider
    - omit_local_variable_types # avoid
    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters # don't
    - prefer_generic_function_type_aliases # don't
    - avoid_private_typedef_functions # prefer
    #- use_function_type_syntax_for_parameters # consider
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals # do
    - prefer_final_fields # prefer
    - use_to_and_as_if_applicable # prefer

analyzer:
  errors:
    # STYLE
    camel_case_types: error
    camel_case_extensions: error
    library_names: error
    file_names: error
    library_prefixes: error
    non_constant_identifier_names: error
    constant_identifier_names: warning
    directives_ordering: error
    lines_longer_than_80_chars: warning
    curly_braces_in_flow_control_structures: error

    # DOCUMENTATION
    slash_for_doc_comments: error
    package_api_docs: warning
    public_member_api_docs: warning
    #comment_references: error

    # USAGE
    unnecessary_brace_in_string_interps: warning
    #prefer_expression_function_bodies: info
    prefer_relative_imports: warning
    prefer_adjacent_string_concatenation: error
    prefer_interpolation_to_compose_strings: warning
    implementation_imports: error
    prefer_collection_literals: error
    avoid_function_literals_in_foreach_calls: warning
    prefer_iterable_whereType: error
    prefer_function_declarations_over_variables: error
    unnecessary_lambdas: error
    prefer_equal_for_default_values: error
    avoid_init_to_null: error
    unnecessary_getters_setters: error
    #unnecessary_getters: warning
    avoid_relative_lib_imports: warning
    unnecessary_this: error
    prefer_initializing_formals: error
    type_init_formals: error
    empty_constructor_bodies: error
    unnecessary_new: error
    unnecessary_const: error
    avoid_catches_without_on_clauses: warning
    avoid_catching_errors: error
    use_rethrow_when_possible: error

    # DESIGN
    avoid_null_checks_in_equality_operators: error
    one_member_abstracts: warning
    avoid_classes_with_only_static_members: warning
    prefer_mixin: error
    avoid_equals_and_hash_code_on_mutable_classes: warning
    use_setters_to_change_properties: error
    avoid_setters_without_getters: error
    avoid_returning_null: warning
    avoid_returning_this: warning
    type_annotate_public_apis: warning
    #prefer_typing_uninitialized_variables: info
    omit_local_variable_types: warning
    avoid_types_on_closure_parameters: warning
    avoid_return_types_on_setters: error
    prefer_generic_function_type_aliases: error
    avoid_private_typedef_functions: warning
    #use_function_type_syntax_for_parameters: info
    avoid_positional_boolean_parameters: warning
    hash_and_equals: error
    prefer_final_fields: warning
    use_to_and_as_if_applicable: warning
